- name: 🚀 Deploy or Delete CloudFormation Stack for EKS with Fargate
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    stack_name: Project-Stack
    template_file: ../AWS-CF-Templates/main-stack.yaml
    region: ap-south-1
    state: present  # Change to 'absent' to delete the stack

  tasks:
    - name: 📦 Manage CloudFormation Stack for EC2 and EKS
      amazon.aws.cloudformation:
        stack_name: "{{ stack_name }}"
        state: "{{ state }}"
        region: "{{ region }}"
        template_body: "{{ lookup('file', template_file) if state == 'present' else '' }}"
        capabilities:
          - CAPABILITY_NAMED_IAM
        tags:
          Environment: Dev
          Owner: DevOps
      register: stack_result

    - name: 🧾 Print full stack_result for debugging
      debug:
        var: stack_result

    - name: ✅ Print Outputs (when Present)
      when: state == 'present'
      block:
        - name: 🔍 Print EKSClientInstanceId
          when: "'EKSClientInstanceId' in stack_result.stack_outputs"
          debug:
            msg: "✅ EKSClientInstanceId: {{ stack_result.stack_outputs['EKSClientInstanceId'] }}"

        - name: 🔍 Print EKSClientPublicIP
          when: "'EKSClientPublicIP' in stack_result.stack_outputs"
          debug:
            msg: "🌐 EKSClientPublicIP: {{ stack_result.stack_outputs['EKSClientPublicIP'] }}"

        - name: 🔍 Print EKS Cluster Name
          when: "'EKSClusterName' in stack_result.stack_outputs"
          debug:
            msg: "☸️ EKS Cluster Name: {{ stack_result.stack_outputs['EKSClusterName'] }}"

        - name: ✅ Stack deployed message
          debug:
            msg: "✅ Stack '{{ stack_name }}' deployed successfully in region '{{ region }}'"

        - name: 🧩 Print Kubeconfig Generation Command
          debug:
            msg:
              - "📄 To generate kubeconfig on the EC2 instance - first configure AWS credentials on the EKS client instance."
              - "💻 Command: aws eks update-kubeconfig --region {{ region }} --name {{ stack_result.stack_outputs['EKSClusterName'] }}"


    - name: 🗑️ Stack deletion success message (Absent)
      when: state == 'absent'
      debug:
        msg: "🗑️ Stack '{{ stack_name }}' deleted successfully from region '{{ region }}'"
